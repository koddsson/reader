<html>
  <head>
    <title>reader</title>
    <meta name="viewport" content="width=device-width">
    <link rel="icon" data-emoji="ðŸ“œ" type="image/png">
    <script src="/emoji-favicon.js"></script>

    <style>
      html, body {
        margin-left: 0;
        margin-right: 0;
      }
      .controls {
        position: absolute;
        bottom: 0;
        width: 100%;
      }
      .d-flex {
        display: flex;
      }
      .flex-1 {
        flex: 1;
      }
      .border-top {
        border-top: 1px solid #ababab !important;
      }
      .border-bottom {
        border-bottom: 1px solid #ababab !important;
      }
      .add-button {
        width: 50px;
        border: 0;
        border-left: 1px solid #ababab;
        border-top: 1px solid #ababab;
        background: white;
        font-size: 2em;
        color: #ababab;
      }
      .margin-0 {
        margin: 0;
      }
      .feed-url {
        border: 0;
      }
      .feed-url-label {
        padding: 1em 0.5em;
      }
      .no-link {
        text-decoration: none;
        color: #000000;
      }
      .float-right {
        float: right;
      }
      .border-0 {
        border: 0 !important;
      }

      .feeds {
        margin: 1em;
      }

      .feed-item {
        display: flex;
        flex-direction: column;
        margin-bottom: 0.83em;
        border: 1px solid gray;
        box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.2)
      }
      
      .feed-item > .body {
        padding: 0 0.83em;
      }

      .feed-item > .body > .post > .body {
        display: flex;
      }

      .feed-item > .body > .post > .body > .image {
        margin: 1em 1em 1em 0;
      }
      
      .feed-item > .body > .post > .body > .image > img {
        width: 200px;
      }

      .feed-item > .footer {
        padding: 0.3em 0.83em;
        font-size: 14px;
      }
      
      .timestamp { text-align: right; }
    </style>
    <script>
      if ('serviceWorker' in navigator) {
        window.addEventListener('load', function() {
          navigator.serviceWorker.register('/service-worker.js').then(function(registration) {
            // Registration was successful
            console.log('ServiceWorker registration successful with scope: ', registration.scope);
          }, function(err) {
            // registration failed :(
            console.log('ServiceWorker registration failed: ', err);
          });
        });
      }
      document.addEventListener('DOMContentLoaded', () => {
        const form = document.querySelector('form')
        form.addEventListener('submit', event => {
          event.preventDefault()
          const url = event.currentTarget.querySelector('#feed_url').value
          fetch('/feeds', {
            method: 'POST',
            body: JSON.stringify({url}),
            headers: {
              'Content-Type': 'application/json'
            }
          }).then(response => {
            if (response.status !== 200) {
              throw new Error('Error')
            }
            return response
          }).then(response => response.json()).then(json => {
            const feeds = JSON.parse(localStorage.getItem('reader-feeds') || '[]')
            feeds.push(json)
            localStorage.setItem('reader-feeds', JSON.stringify(feeds))
            alert('feed added!')
            window.location.reload()
          })
        })
        document.querySelector('.js-toggle-feed-url').addEventListener('click', event => {
          event.preventDefault()

          const form = document.querySelector('form')
          form.classList.toggle('d-flex')
          form.hidden = !form.hidden
        })
        function urlBase64ToUint8Array(base64String) {
          const padding = '='.repeat((4 - base64String.length % 4) % 4);
          const base64 = (base64String + padding)
            .replace(/\-/g, '+')
            .replace(/_/g, '/');

          const rawData = window.atob(base64);
          const outputArray = new Uint8Array(rawData.length);

          for (let i = 0; i < rawData.length; ++i) {
            outputArray[i] = rawData.charCodeAt(i);
          }
          return outputArray;
        }
        document.querySelector('.js-toggle-notifications').addEventListener('click', () => {
          if ('serviceWorker' in navigator) {
            navigator.serviceWorker.ready.then(function(reg) {
              const vapidPublicKey = 'BIqBY2Zs9H1pxRzIpGwklzwF4okxQDXuQVhiPYLJidGtYNhvTupWYKMv2NVOK39otMvS_3L9hUE1NtLqt3lTdXg'
              const convertedVapidKey = urlBase64ToUint8Array(vapidPublicKey);

              reg.pushManager.subscribe({
                userVisibleOnly: true,
                applicationServerKey: convertedVapidKey
              }).then(async function(sub) {
                console.log('Endpoint URL: ', sub.endpoint);
                const response = await fetch('/web-push', {
                  method: 'POST',
                  body: JSON.stringify(sub),
                  headers: {
                    'Content-Type': 'application/json'
                  }
                })
                const json = await response.json()
                console.log(json)
              }).catch(function(e) {
                if (Notification.permission === 'denied') {
                  console.warn('Permission for notifications was denied');
                } else {
                  console.error('Unable to subscribe to push', e);
                }
              });
            })
          }
        })
      })
    </script>
  </head>
  <body>
    <div class="d-flex border-bottom">
      <h1 class="flex-1" style="padding-left: 1em;">
        <a href="/" class="no-link">ðŸ“œ Reader</a>
      </h1>
      <button style="width:100px; font-size:3em; border: 0;" class="js-toggle-notifications">ðŸ””</button>
      <button style="width:100px; font-size:3em; border: 0;" class="js-toggle-feed-url">âž•</button>
    </div>
    <form class="margin-0 border-bottom" hidden>
      <label for="feed_url" class="feed-url-label">URL: </label>
      <input id="feed_url" class="feed-url flex-1" placeholder="http://feeds.wnyc.org/moreperfect" />
    </form>
    <div class="feeds">
      {{#each posts}}
      <div class="feed-item">
        <div class="body d-flex">
          {{{content}}}
        </div>
        <div class="footer border-top d-flex">
          <div class="flex-1">{{title}}</div>
          <a href="{{link}}" class="timestamp">
            <time>{{pubDate}}</time>
          </a>
        </div>
      </div>
      {{/each}}
    </div>
  </body>
</html>
